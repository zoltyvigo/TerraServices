# Example configuration file for Services.  After making the appropriate
# changes to this file, place it in the Services data directory (as
# specified in the "configure" script, default /usr/local/lib/services)
# under the name "services.conf".
#
# The format of this file is fairly simple: a line beginning with a # is a
# comment, and any other non-blank line is expected to be a directive and
# parameters, separated by spaces or tabs.  For example:
#
#	Directive Parameter-1 Parameter-2 ...
#
# Directives are case-insensitive.  Note that some directives do not take
# any parameters; these are typically "on-off" directives, for which simply
# including the directive in this file (or removing it) has an effect on
# Services' functionality.
#
# If a parameter's value is a string which includes spaces, enclose the
# string in double quotation marks, like the example below.  Quotes may be
# used around any string at all for clarity.
#
#	"This is a parameter string with spaces in it"
#
# If you need to include a double quote inside a quoted string, precede it
# by a backslash:
#
#	"This string has \"double quotes\" in it"
#
# Time parameters can be specified either as an integer representing a
# number of seconds (e.g. "3600" = 1 hour), or as an integer with a unit
# specifier: "s" = seconds, "m" = minutes, "h" = hours, "d" = days.
# Combinations (such as "1h30m") are not permitted.  Examples (all of which
# represent the same length of time, one day):
#
#	"86400", "86400s", "1440m", "24h", "1d"
#
# In the documentation for each directive, one of the following will be
# included to indicate whether an option is required:
#
# [REQUIRED]
#     Indica un directiva que es obligatorio. Omitiendo la opcion causa
#     que los Services no arranquen.
#
# [RECOMMENDED]
#     Indica un directiva que puede ser omitido, pero omitiendo puede causar
#     efectos no deseados.
#
# [OPTIONAL]
#     Indicates a directive which is optional.  If not given, the feature
#     will typically be disabled.  If this is not the case, more
#     information will be given in the documentation.
#
# [DISCOURAGED]
#     Indicates a directive which may cause undesirable side effects if
#     specified.
#
# [DEPRECATED]
#     Indicates a directive which will disappear in a future version of
#     Services, usually because its functionality has been either
#     superseded by that of other directives or incorporated into the main
#     program.

###########################################################################
#
# Remote server configuration
#
###########################################################################

# RemoteServer <hostname> <port> <password>  [REQUIRED]
#     Specifies the remote server hostname and port.  The hostname may
#     either be a standard Internet hostname or dotted-quad numeric
#     address; the port number must be an integer between 1 and 65535
#     inclusive.  The password is a string which should be enclosed in
#     double quotes if it contains any spaces (or just for clarity).
#
#     The remote server and port may be overridden at runtime with the
#     -remote command-line option.  The password may not be set at runtime.

RemoteServer	localhost 4400 "openaccess"

# LocalAddress <hostname> [port]  [OPTIONAL]
#     Specifies the local address to bind to before connecting to the
#     remote server.  This may be useful on multihomed hosts.  The hostname
#     and port number are specified the same way as with the RemoteServer
#     directive.  If this is not specified, Services will let the operating
#     system choose the local address.  If only a hostname is specified,
#     Services will bind to that address but let the operating system
#     choose the local port number.
#
#     If you don't know what this means or don't need to use it, just leave
#     the directive commented out.
#
#     This directive may be overridden at runtime by the -local
#     command-line option.

#LocalAddress	nowhere. 0

###########################################################################
#
# Identificacion de los Services y nombres de los pseudoclientes
#
###########################################################################

# ServerName <nombre>  [REQUERIDO]
#     Especifica el nombre del servidor IRC con el cual debe usar Services.
#     Puede ser sobreexpuesto por la opcion de consola -name.

ServerName	"services.terra.es"


# ServerDesc <texto>  [REQUERIDO]
#     Especifica el texto para la informacion del servidor en los /LINKS,
#     /WHOIS y similiares. Puede ser sobreexpuesto por la opcion de
#      consola -desc.

ServerDesc	"Servicios de Terra Networks, S.A."


# ServerNumerico <numero>  [REQUERIDO en UNDERNET P10]
#     Especifica el numerico identificativo en una red Undernet P10 para
#     los Services. El numero debe ser unico en la red.

#ServerNumerico 60
# En estos bots no tiene P10, son P9


# ServerHUB <servidor> [REQUERIDO]
#     Especifica el servidor donde van a linkar los Services.
#     Es esecial para el buen funcionamiento del control
#     de servidores y quits (YA NO ES NECESARIO)

ServerHUB	"tpir.anillo.adm"


# ServiceUser <usermask>  [REQUERIDO]
#     Especifica la mascara user@host con la que debe ser usado por los
#     pseudoclientes de los Services. Puede ser sobreexpuesto por las
#     opciones de consola -user y -hostname.


ServiceUser	"servicios@terra.es"

# ...Name <nick> <comentario>  [REQUERIDO excepto IrcIIHelp y DevNull]
#     Especifica los nicks (primer parametro) y "realnames" (segundo
#     parametro para los pseudoclientes de los Services.
#     IrcIIHelp y DevNull pueden ser deshabilitados comentando la linea
#     apropiada.

NickServName	"Nick"	"Servicio de nicks"
ChanServName	"Chan"	"Servicio de mantenimiento de canales"
CyberServName	"Cyber"	"Servicio de Cybercafés"
MemoServName	"Memo"	"Servicio de mensajeria"
HelpServName	"Help"	"Servicio de ayuda"
OperServName	"Oper"	"Servicio de Administración"
GlobalName	"Global"	"Servicio de mensajes Globales"
IrcIIHelpName	"IrcIIHelp"	"Servicio de ayuda para usuarios de ircII"
DevNullName	"DevNull"	"/dev/null -- message sink"

###########################################################################
#
# Nombres de Archivos de los Services
#
###########################################################################

# NOTA: Todos los nombres de arvhivo son relativos para el directorio de
# data de los Services.

# PIDFile <nombre archivo>  [REQUERIDO]
#     Especifica el nombre de archivo que contenga el ID de proceso de los
#     Services.

PIDFile		services.pid

# MOTDFile <nombre archivo>  [REQUERIDO]
#     Especifica el nombre de archivo para el Mensaje del dia.

MOTDFile	services.motd


# HelpDir <directorio>  [REQUERIDO]
#     Especifica el nombre del subdirectorio que contenga los archivos de
#     ayuda para HelpServ y IrcIIHelp.

HelpDir         helpfiles


# ...DB <nombre archivo>  [REQUERIDO]
#    Especifica los nombres de archivos para las diferentes sistemas de
#    bases de datos de los Services.

NickServDB	nick.db
ChanServDB	chan.db
CyberServDB	iline.db
OperServDB	oper.db
AutokillDB	gline.db
NewsDB		news.db

###########################################################################
#
# Funcionamiento basico
#
###########################################################################

# NoBackupOkay  [DISCOURAGED]
#     Allows Services to continue file write operations (i.e. database
#     saving) even if the original file cannot be backed up.  Enabling this
#     option may allow Services to continue operation under some conditions
#     when it might otherwise fail, such as a nearly-full disk.
#
#     *** NOTE ***
#     Enabling this option can cause irrecoverable data loss under some
#     conditions, so make CERTAIN you know what you're doing when you
#     enable it!

#NoBackupOkay

# NoSplitRecovery [OPTIONAL]
#     Disables Services' recognition of users returning from netsplits.
#     Normally (on networks with some sort of timestamp support in the IRC
#     server), Services will check via the timestamp field whether a user
#     is the same as the last user who identified for the nick, and allow
#     the user access to that nick without requiring identification again
#     if the timestamps match.  Enabling this option will force all users
#     to re-identify after a netsplit.
#
#     Normally, it's easier on users to leave this disabled, but if you
#     suspect one of your servers has been hacked to send false timestamps
#     (or you suspect a bug in Services itself) enabling this directive
#     will eliminate the possibility of one user "stealing" another's nick
#     by pretending to have the same timestamp.
#
#     You may also want to uncomment this directive if your servers' clocks
#     are very far apart; the less synchronized the servers' clocks are,
#     the greater the possibility of someone "taking over" another person's
#     nick when a server with a fast clock splits (though the likelihood of
#     success is relatively small in any case).

#NoSplitRecovery

# ListOpersOnly  [DEPRECATED]
#     When enabled, limits use of the ChanServ and NickServ LIST commands
#     to IRC operators.
#
#     This directive has been superseded by the NSListOpersOnly and
#     CSListOpersOnly directives.

#ListOpersOnly

# StrictPasswords  [RECOMMENDED]
#     When enabled, causes Services to perform more stringent checks on
#     passwords.  If this is disabled, Services will only disallow a
#     password if it is the same as the entity (nickname or channel name)
#     with which it is associated.  When enabled, however, Services will
#     also check that the password is at least five characters long, and
#     in the future will probably check other things as well.

StrictPasswords

# BadPassLimit <count>  [RECOMMENDED]
#     Sets the number of invalid password tries before Services removes a
#     user from the network.  If a user enters <count> invalid passwords
#     for any Services function or combination of functions during a
#     single IRC session (subect to BadPassTimeout, below), Services will
#     issue a /KILL for the user.  If not given, Services will ignore
#     failed password attempts (though they will be logged in any case).

BadPassLimit	3

# BadPassTimeout <time>  [OPTIONAL]
#     Sets the time after which invalid passwords are forgotten about.  If
#     a user does not enter any incorrect passwords in this amount of time,
#     the incorrect password count will reset to zero.  If not given, the
#     timeout will be disabled, and the incorrect password count will never
#     be reset until the user disconnects.

BadPassTimeout	1h

# UpdateTimeout <time>  [REQUEIRIDO]
#     Ajusta la frecuencia de las actualizaciones de los bases de datos
#     de los services. El tiempo es reseteado por el comando UPDATE de
#     OperServ

UpdateTimeout	5m


# ExpireTimeout <time>  [REQUERIDO]
#     Ajusta la frecuencia de los chequeo para los expiraciones de los
#     nicks y canales.
#     El comando UPDATE de OperServ, causa el chequeo de las expiraciones 
#     y resetea el tiempo.

ExpireTimeout	30m

# ReadTimeout <time>  [REQUERIDO]
#     Ajusta el periodo de timeout para leer desde la red.

ReadTimeout	5s

# WarningTimeout <time>  [REQUIRED]
#     Ajusta la frecuencia de envio de warning de los errores del programa
#     v¡a CanalOpers.

WarningTimeout	4h

# SettimeTimeout <time> [REQUERIDO]
#     Ajusta la frecuencia de envio SETTIMES a la red para la sincronizacion
      de la red.

SettimeTimeout  1h


# TimeoutCheck <time>  [REQUIRED]
#     Sets the (maximum) frequency at which the timeout list is checked.
#     This, combined with ReadTimeout above, determine how accurately timed
#     events, such as nick kills, occur; it also determines how much CPU
#     time Services will use doing this.  Higher values will cause less
#     accurate timing but less CPU usage.
#
#     This shouldn't be set any higher than 10 seconds, and 1 second is
#     best if your system is powerful enough (or your network small enough)
#     to handle it.  0 will cause the timeout list to be checked every time
#     through the main loop, which will probably slow down Services too
#     much to be useful on most networks.
#
#     Note that this value is not an absolute limit on the period between
#     checks of the timeout list; the period may be as great as ReadTimeout
#     (above) during periods of inactivity.

TimeoutCheck	3s



###########################################################################
#
# Configuracion de envio de mails
#
###########################################################################

SendMailPatch "/usr/sbin/sendmail %s"

SendFrom nickserv@terra.es

WebNetwork "http://www.terra.es/chat"


###########################################################################
#
# NickServ configuration
#
###########################################################################

# NSDef...  [OPTIONAL]
#     Sets the default options for newly registered nicks.  Note that
#     changing these options will have no effect on nicks which are already
#     registered.
#
#     If both NSDefKill and NSDefKillQuick are given, the latter takes
#     precedence.  KILL IMMED cannot be specified as a default.
#
#     NOTE:  If you do not enable any of these options, a default of
#     Secure, MemoSignon, and MemoReceive will be used, for backward
#     compatibility.  If you really want no options enabled by default, use
#     NSDefNone.

#NSDefNone

#NSDefKill
#NSDefKillQuick
NSDefSecure
NSDefPrivate
#NSDefHideEmail
#NSDefHideUsermask
#NSDefHideQuit
NSDefMemoSignon
NSDefMemoReceive

# NSRegDelay <time>  [RECOMMENDED]
#     Sets the minimum length of time between consecutive uses of the
#     REGISTER command.  If not given, this restriction is disabled (note
#     that this allows "registration flooding").

NSRegDelay	300s


# NSNicksMail [REQUERIDO]
#   Numero maximo de nicks registrables con un mismo email
#

NSNicksMail 3


# NSExpire <time>  [RECOMMENDED]
#     Sets the length of time before a nick registration expires.

NSExpire	60d


# NSSuspendExpire <tiempo> [REQUERIDO]
#     Ajusta el tiempo de expiración de por defecto para las suspensiones
#     de nicks.

NSSuspendExpire 30d

# NSSuspendGrace <tiempo> [RECOMENDADO]
#     El periodo de gracia de un nick suspendido antes que pueda expirar
#     el nick cuando sean reactivado el nick (unsuspend).
#     Lo que hace es ajustar la "Ultima hora en la red"..
#     Si este valor esta a 0 o "comentado", los nicks cuando sean
#     reactivados y si tienen más tiempo que NSExpire sin usar, serán
#     expirados en la proxima actualizacion de las DB, entonces los
#     dueños de los nicks tendrian que identificar antes de que expiren.

NSSuspendGrace 5d

# NSPassChanged <tiempo> [RECOMENDADO]
#     Ajusta el tiempo sin cambiar la password para que salga un mensaje
#     de recomendacion para el cambio de password. Si esto est  comentado
#     no saldra el mensaje de advertencia 

NSPassChanged 30d


# NSAccessMax <numero> [REQUERIDO]
#     Ajusta el maximo numero de entradas permitidas en la lista de
#     de accesos del nick.

NSAccessMax	32

# NSEnforcerUser <user>[@<host>]  [REQUIRED]
#     Sets the username (and possibly hostname) used for the fake user
#     created when NickServ collides a user.  Should be in user@host
#     format.  If the host is not given, the one from ServicesUser is
#     used.

#NSEnforcerUser	enforcer
NSEnforcerUser	enforcer@enforcer.Terra

# NSReleaseTimeout <time>  [REQUIRED]
#     Sets the delay before a NickServ-collided nick is released.

NSReleaseTimeout 1m

# NSAllowKillImmed  [OPTIONAL]
#     When enabled, allows the use of the IMMED option with the NickServ
#     SET KILL command.

NSAllowKillImmed

# NSDisableLinkCommand  [OPTIONAL]
#     When enabled, makes the NickServ LINK command unavailable.  Note that
#     any links that have already been created will continue to function;
#     this only prevents new links from being made.

#NSDisableLinkCommand

# NSListOpersOnly  [OPTIONAL]
#     When enabled, limits use of the NickServ LIST command to IRC
#     operators.

#NSListOpersOnly

# NSListMax <count>  [REQUIRED]
#     Specifies the maximum number of nicks to be returned for a NickServ
#     LIST command.

NSListMax	50

# NSForceNickChange  [OPTIONAL]
#     When enabled, makes NickServ change a user's nick to a "Guest######" 
#     nick instead of killing them when enforcing a "nick kill". This is 
#     accomplished by way of the SVSNICK command. This option is only
#     available if Services have been compiled to work with a DALnet server,
#     version 4.4.15 or above.

NSForceNickChange

# NSGuestNickPrefix <value>  [REQUIRED]
#     When a user's nick is forcibly changed to enforce a "nick kill", their
#     new nick will start with this value. The rest will be made up of 6 or 7
#     digits. This only applies when NSForceNickChange (see above) is enabled.

NSGuestNickPrefix	"Terra-"


###########################################################################
#
# ChanServ configuration
#
###########################################################################

# CSInChannel [OPCIONAL]
#     ChanServ entra en los canales....
#     Cosas de la migracion, es mejor que este activada un tiempo, y luego
#     desactivarlo

CSInChannel

# CSMaxReg <count>  [RECOMMENDED]
#     Limits the number of channels which may be registered to a single
#     nickname.

CSMaxReg	20

# CSExpire <time>  [RECOMMENDED]
#     Sets the number of days before a channel expires.

CSExpire	30d

# CSSuspendExpire <tiempo> [REQUERIDO]
#     Ajusta el tiempo de expiración de por defecto para las suspensiones
#     de canales.

CSSuspendExpire 15d


# CSSuspendGrace <tiempo> [RECOMENDADO]
#     El periodo de gracia de un canal suspendido antes que pueda expirar
#     el canal cuando sea reactivado el canal (unsuspend).
#     Lo que hace es ajustar la "Ultimo uso"..
#     Si este valor esta a 0 o "comentado", los canales cuando sean
#     reactivados y si tienen más tiempo que CSExpire sin usar, serán
#     expirados en la proxima actualizacion de las DB, entonces los
#     fundadores de los canales tendrian que identificar antes de que
#     expiren.

CSSuspendGrace 5d


# CSAccessMax <count>  [REQUIRED]
#     Sets the maximum number of entries on a channel's access list.
#     Channel access lists may contain only registered nicknames;
#     therefore, checking each entry on the list requires only a single
#     scaler comparison instead of a wildcard match, and this limit may be
#     safely set much higher than (for exmple) the nickname access list
#     size limit without impacting performance significantly.

CSAccessMax	256

# CSAutokickMax <count>  [REQUIRED]
#     Sets the maximum number of entries on a channel's autokick list.

CSAutokickMax	32

# CSAutokickReason <text>  [REQUIRED]
#     Sets the default reason for an autokick if none is given.

CSAutokickReason "Estás en la lista de AKICK's del canal"

# CSInhabit <time>  [REQUIRED]
#     Sets the length of time ChanServ stays in a channel after kicking a
#     user from a channel s/he is not permitted to be in.  This only occurs
#     when the user is the only one in the channel.

CSInhabit	15s

# CSRestrictDelay <time>  [DISCOURAGED]
#     When enabled, causes ChanServ to ignore any RESTRICTED or NOJOIN
#     channel setting for the given time after Services starts up.  This
#     gives users a time to identify to NickServ before being kicked out of
#     restricted channels they would normally be allowed to join.  This
#     setting will also cause channel mode +o's from servers to be passed
#     through for this initial period.
#
#     This option is presently discouraged because it is not properly
#     implemented; any users in channels when Services starts up get a
#     "free ride", though they can of course be deopped/kicked manually.

#CSRestrictDelay	30s

# CSListOpersOnly  [OPTIONAL]
#     When enabled, limits use of the ChanServ LIST command to IRC
#     operators.

#CSListOpersOnly

# CSListMax <count>  [REQUIRED]
#     Specifies the maximum number of channels to be returned for a
#     ChanServ LIST command.

CSListMax	50

###########################################################################
#
# MemoServ configuration
#
###########################################################################

# MSMaxMemos <count>  [RECOMMENDED]
#     Sets the maximum number of memos a user is allowed to keep by
#     default.  Normal users may set the limit anywhere between zero and
#     this value; Services admins can change it to any value or disable it.
#     If not given, the limit is disabled by default, and normal users can
#     set any limit they want.

MSMaxMemos	20


# MSIgnoreMax <numero> [REQUERIDO]
#     Ajusta el maximo numero de entradas permitidas en la lista de
#     de ignores de MemoServ

MSIgnoreMax     32


# MSSendDelay <time>  [RECOMMENDED]
#     Sets the delay between consecutive uses of the MemoServ SEND command.
#     This can help prevent spam as well as denial-of-service attacks from
#     sending large numbers of memos and filling up disk space (and
#     memory).  A 3-second wait means a maximum average of 150 bytes of
#     memo per second per user under the current IRC protocol.

MSSendDelay	30s

# MSNotifyAll  [OPTIONAL]
#     Should we notify all appropriate users of a new memo?  This applies
#     in cases where a memo is sent to a nick which either is linked to
#     another nick or has another nick linked to it.  Enabling this option
#     will cause MemoServ to check all users who are currently online to
#     see whether any have nicks which are linked to the target of the
#     memo, and if so, notify all of them.  This can take a good deal of
#     CPU time on larger networks, so you may want to disable it.

MSNotifyAll

###########################################################################
#
# Configuracion de CyberServ y Control de Clones
#
###########################################################################

# ControlClones  [OPCIONAL]
#     Activa el control de clones. El control de clones previene que los
#     usuarios conecten mas de un cierto numero de veces desde la misma
#     host durante el mismo tiempo. Tambien previene ciertos tipos de clones
#     como los usados en iRC-War. 
#     Lee el fuente y los comentarios en cyberserv.c y ayuda online para mas
#     informacion sobre el Control de Clones.
#
#     NOTA:  Esta opcion n.o esta disponible cuando esta no está definido
#     CYBER en el config.h

ControlClones


# LimiteClones <limite>  [REQUERIDO]
#     Numero de clones permitidos de por defecto. 

LimiteClones 2


# MaximoClones <limite>  [REQUERIDO]
#     El maximo número de clones que se puede conceder en una iline en
#     CyberServ.

MaximoClones 512


# ExpIlineDefault <tiempo>  [REQUERIDO]
#     Ajusta el tiempo de expiracion de una iline de por defecto cuando
#     se añade sin la expiracion.

ExpIlineDefault 365d

# MensajeClones <mensaje>  [OPCIONAL]
#     El mensaje que sera enviado con un NOTICE al usuario justo antes de
#     ser killeado de la red por exceeder de los clones.
#     Esto debes usar para mandar una mensaje de razon descriptivo al
#     usuario que va a ser killeado. Si esto esta comentado, no se enviará
#     el mensaje.

MensajeClones "Has superado el limite de clones para tu ip 12%s."

# WebClones <mensaje>  [OPCIONAL]
#     Igual es una tonteria, pero debes usar para indicar una direccion web
#     a los usuarios que no puedan entrar por exceder del limite de clones.
#     Si esto esta comentado, no se enviará el mensaje.
#
#     Esta opcion esta descomentada intencionadamente para que puedas cambiar
#     el URL (direccion web). Es recomendable poner una direccion/url donde
#     la gente pueda conseguir informacion sobre clones.

WebClones "Por favor visitar 12http://www.terra.es/personal3/zoltanito/clones.htm para más informacion sobre los clones"


# CanalCybers <canal> [REQUERIDO]
#     Canal donde se entre el CyberServ de por defecto. Se recomienda tener
#     un canal de ayuda/soporte a los Cybers o poseedores de ilines con el
#     fin de tener el bot a mano.

CanalCybers "cybers-admin"

# CyberListMax <numero>  [REQUERIDO]
#     Especifica el maximo numero de ilines que seran retornados para
#     el comando LIST de CyberServ

CyberListMax       50

###########################################################################
#
# Configuracion de OperServ
#
###########################################################################

# ServicesRoot <nick>  [REQUERIDO]
#    Especifica el "super-usuario" de los Services.  El super-usuario, o
#    como "root" en la terminologia de Unix, es el unico usuario que
#    puede añadir o borrar Administradores de Services.
#
#    Esto esta comentada de por defecto; por favor inserta tu nick correcto
#    y despues descomentarlo (quitar la #).

#ServicesRoot    TeX


# CanalOpers <canal>   [REQUERIDO]
#     Canal donde se entran los bots NickServ, ChanServ, CyberServ y OperServ
#     de por defecto. Y el canal donde los bots canten/loguean las acciones
#     realizadas por los Operadores y Administradores de Services, tambien
#     loguearan sucesos tales como links o splits de servidores. Esto
#     sustituye a los antiguos wallops que habia antes.

CanalOpers "opers"

# CanalAdmins <canal>   [REQUERIDO]
#     Canal donde se entra el bot OperServ de por defecto. Y el canal
#     donde los bots canten/loguean determinadas acciones realizadas por
#     Operadores y Administradores de Services.

CanalAdmins "admins"

# CanalHelp <canal>   [REQUERIDO]
#    Adminsl donde se entra el bot de ayuda HelpServ  de por defecto.

CanalHelp "terra"


# LogMaxUsers  [OPCIONAL]
#    Causa que Services escriba un mensaje en el log cada vez ke se bate el
#    record de usuarios.

#LogMaxUsers

# LogMaxChans  [OPCIONAL]
#    Causa que Services escriba un mensaje en el log cada vez ke se bate el
#    record de canales.

#LogMaxChans


# StaticAkillReason <mensaje> [OPCIONAL]
#     Ajusta el mensaje que se mandara con el KILL cuando un usuario
#     que tiene su mascara en la lista de AKILLS/GLINES antes de proceder
#     a la Gline.
#     Si est  comentada, se le KILLeara con el motivo puesto, en caso
#     contrario, con este mensaje mostrado abajo.

# StaticAkillReason	"Estas BANEADO de la Red"


# ImmediatelySendAkill  [OPCIONAL]
#     Si al meter un AKILL, se le killea primero, luego.. segun como este
#     la opcion, si est  comentada, el akill se meter  cuando entra el
#     usuario a la red, en caso contrario (activada), se metera el akill
#     justo despues del KILL.

ImmediatelySendAkill    

# AutokillExpiry <tiempo>  [REQUERIDO]
#     Ajusta el tiempo de expiracion de por defecto para los Glines.

AutoKillExpiry  30d


# KillClonesAkillExpire <tiempo>  [REQUERIDO]
#     Ajusta el tiempo de expiracion para Glines añadidos para hosts
#     que sean killeados usando el comando KILLCLONES de CyberServ.

KillClonesAkillExpire   30m
